{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","title","type","id","to","aboutText","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","setSelectionRange","getSelection","removeAllRanges","navigator","clipboard","writeText","split","join","filter","element","About","defaultProps","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","path","component","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.31741bc0.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Navbar(props) {\n  return (\n    <nav\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\n    >\n      <div className=\"container-fluid\">\n        <span className=\"navbar-brand\">{props.title}</span>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" aria-current=\"page\" to=\"/home\">\n                Home\n              </Link>\n              {/* <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a> */}\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/about\">\n                {props.aboutText}\n              </Link>\n            </li>\n          </ul>\n\n          <div\n            className={`form-check form-switch text-${\n              props.mode === \"light\" ? \"dark\" : \"light\"\n            }`}\n          >\n            <input\n              className=\"form-check-input\"\n              onClick={props.toggleMode}\n              type=\"checkbox\"\n              id=\"flexSwitchCheckDefault\"\n            />\n            <label\n              className=\"form-check-label\"\n              htmlFor=\"flexSwitchCheckDefault\"\n            >\n              Enable DarkMode\n            </label>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nNavbar.propTypes = {\n  title: PropTypes.string.isRequired,\n  aboutText: PropTypes.string.isRequired,\n};\n\nNavbar.defaultProps = {\n  title: \"Set title here\",\n  aboutText: \"About\",\n};\n","import React, {useState} from 'react'\n\n\nexport default function TextForm(props) {\n\n    const handleUpClick = ()=>{\n        // console.log(\"Uppercase was clicked: \" +  text);\n        let newText = text.toUpperCase();\n        setText(newText)\n        props.showAlert(\"Converted to uppercase!\", \"success\");\n    }\n\n    const handleLoClick = ()=>{ \n        let newText = text.toLowerCase();\n        setText(newText)\n        props.showAlert(\"Converted to lowercase!\", \"success\");\n    }\n\n    const handleClearClick = ()=>{ \n        let newText = '';\n        setText(newText);\n        props.showAlert(\"Text Cleared!\", \"success\");\n    }\n\n    const handleOnChange = (event)=>{\n        // console.log(\"On change\");\n        setText(event.target.value) \n    }\n\n    // Credits: A\n    const handleCopy = () => {\n        // console.log(\"I am copy\");\n        var text = document.getElementById(\"myBox\");\n        text.select();\n        text.setSelectionRange(0, 9999);\n        document.getSelection().removeAllRanges(); \n        navigator.clipboard.writeText(text.value);\n        props.showAlert(\"Copied to Clipboard!\", \"success\");\n    }\n\n    // Credits: Coding Wala\n    const handleExtraSpaces = () => {\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"));\n        props.showAlert(\"Extra spaces removed!\", \"success\");\n    }\n\n    const [text, setText] = useState(''); \n    // text = \"new text\"; // Wrong way to change the state\n    // setText(\"new text\"); // Correct way to change the state\n    return (\n        <>\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#26292b'}}> \n            <h1>{props.heading}</h1>\n            <div className=\"mb-3\"> \n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#26292b':'white', color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\n            </div>\n            <button disabled={text.length===0} className=\"btn btn-outline-success mx- my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\n            <button disabled={text.length===0} className=\"btn btn-outline-success mx- my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\n            <button disabled={text.length===0} className=\"btn btn-outline-success mx- my-1\" onClick={handleCopy}>Copy Text</button>\n            <button disabled={text.length===0} className=\"btn btn-outline-success mx- my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\n            <button disabled={text.length===0} className=\"btn btn-outline-success mx- my-1\" onClick={handleClearClick}>Clear Text</button>\n\n        </div>\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#26292b'}}>\n            <h2>Your text summary</h2>\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\n            <p>{0.008 *  text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes read</p>\n            <h2>Preview</h2>\n            <p>{text.length>0?text:\"Nothing to preview!\"}</p>\n        </div>\n        </>\n    )\n}\n","// import React, {useState} from 'react'\n\nexport default function About(props) {\n\n    // const [myStyle, setMyStyle] = useState({\n    //     color: 'black',\n    //     backgroundColor: 'white'\n    // }) \n    let myStyle = {\n        color: props.mode === 'dark'?'white':'#26292b',\n        backgroundColor:props.mode === 'dark'?'rgb(44 46 47)':'white',              \n        // border : '2px solid',\n        // borderColor: props.mode === 'dark'?'white':'#26292b'\n    }\n    // rgb(38,41,43)\n    return (\n        <div className=\"container\" >\n            \n            \n        </div>\n    )\n}\n","import React from 'react'\n\nfunction Alert(props) {\n    const capitalize = (word)=>{\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n    return (\n        <div style={{height : '50px'}}>\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n           <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg} \n        </div>}\n        </div>\n    )\n}\n\nexport default Alert\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); // Whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#26292b\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      // document.title = 'TextUtils - Dark Mode';\n      // setInterval(() => {\n      //   document.title = 'TextUtils is Amazing Mode';\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = 'Install TextUtils Now';\n      // }, 1500);\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n      // document.title = 'TextUtils - Light Mode';\n    }\n  };\n  return (\n    <>\n      \n      <Router>\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Switch>\n            <Route path=\"/about\" component={About}>\n              <About mode={mode} />\n            </Route>\n            <Route path=\"/home\" component={TextForm}>\n              <TextForm\n                showAlert={showAlert}\n                heading=\"Enter the text to analyze below\"\n                mode={mode}\n              />\n            </Route>\n            <Redirect from=\"/\" to=\"/home\" />\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}