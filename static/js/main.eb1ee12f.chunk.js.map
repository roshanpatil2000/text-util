{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","setSelectionRange","getSelection","removeAllRanges","navigator","clipboard","writeText","split","join","filter","element","defaultProps","aboutText","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.eb1ee12f.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom';\n\nexport default function Navbar(props) {\n    return (\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n            <div className=\"container-fluid\">\n                <Link className=\"navbar-brand\" to=\"/home\">{props.title}</Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" aria-current=\"page\" to=\"/home\">Home</Link>\n                            {/* <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a> */}\n                        </li>\n                        {/* <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\n                        </li> */}\n                    </ul>\n                   \n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    aboutText: PropTypes.string.isRequired\n}\n\nNavbar.defaultProps = {\n    title: 'Set title here',\n    aboutText: 'About'\n  };","import React, {useState} from 'react'\n\n\nexport default function TextForm(props) {\n\n    const handleUpClick = ()=>{\n        // console.log(\"Uppercase was clicked: \" +  text);\n        let newText = text.toUpperCase();\n        setText(newText)\n        props.showAlert(\"Converted to uppercase!\", \"success\");\n    }\n\n    const handleLoClick = ()=>{ \n        let newText = text.toLowerCase();\n        setText(newText)\n        props.showAlert(\"Converted to lowercase!\", \"success\");\n    }\n\n    const handleClearClick = ()=>{ \n        let newText = '';\n        setText(newText);\n        props.showAlert(\"Text Cleared!\", \"success\");\n    }\n\n    const handleOnChange = (event)=>{\n        // console.log(\"On change\");\n        setText(event.target.value) \n    }\n\n    // Credits: A\n    const handleCopy = () => {\n        // console.log(\"I am copy\");\n        var text = document.getElementById(\"myBox\");\n        text.select();\n        text.setSelectionRange(0, 9999);\n        document.getSelection().removeAllRanges(); \n        navigator.clipboard.writeText(text.value);\n        props.showAlert(\"Copied to Clipboard!\", \"success\");\n    }\n\n    // Credits: Coding Wala\n    const handleExtraSpaces = () => {\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"));\n        props.showAlert(\"Extra spaces removed!\", \"success\");\n    }\n\n    const [text, setText] = useState(''); \n    // text = \"new text\"; // Wrong way to change the state\n    // setText(\"new text\"); // Correct way to change the state\n    return (\n        <>\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#26292b'}}> \n            <h1>{props.heading}</h1>\n            <div className=\"mb-3\"> \n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#26292b':'white', color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\n            </div>\n            <button disabled={text.length===0} className=\"btn btn-outline-success mx- my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\n            <button disabled={text.length===0} className=\"btn btn-outline-success mx- my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\n            <button disabled={text.length===0} className=\"btn btn-outline-success mx- my-1\" onClick={handleCopy}>Copy Text</button>\n            <button disabled={text.length===0} className=\"btn btn-outline-success mx- my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\n            <button disabled={text.length===0} className=\"btn btn-outline-success mx- my-1\" onClick={handleClearClick}>Clear Text</button>\n\n        </div>\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#26292b'}}>\n            <h2>Your text summary</h2>\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\n            <p>{0.008 *  text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes read</p>\n            <h2>Preview</h2>\n            <p>{text.length>0?text:\"Nothing to preview!\"}</p>\n        </div>\n        </>\n    )\n}\n","import React from 'react'\n\nfunction Alert(props) {\n    const capitalize = (word)=>{\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n    return (\n        <div style={{height : '50px'}}>\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n           <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg} \n        </div>}\n        </div>\n    )\n}\n\nexport default Alert\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n \nfunction App() {\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() => {\n          setAlert(null);\n      }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#26292b';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      // document.title = 'TextUtils - Dark Mode';\n      // setInterval(() => {\n      //   document.title = 'TextUtils is Amazing Mode';\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = 'Install TextUtils Now';\n      // }, 1500);\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      // document.title = 'TextUtils - Light Mode';\n    }\n  }\n  return (\n    <>\n    {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" /> */}\n    {/* <Navbar/> */}\n    <Router>\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    <Switch>\n    {/* /users --> Component 1\n        /users/home --> Component 2 */}\n          {/* <Route exact path=\"/about\">\n          <About mode={mode} />\n          </Route> */}\n          <Route exact path=\"/home\">\n            <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n          </Route>\n    </Switch>\n    </div>\n    </Router>\n    </> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}